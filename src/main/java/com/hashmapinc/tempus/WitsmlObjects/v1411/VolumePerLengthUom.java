//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.06.26 at 03:00:38 PM CDT 
//


package com.hashmapinc.tempus.WitsmlObjects.v1411;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VolumePerLengthUom.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre> {@code
 * <simpleType name="VolumePerLengthUom">
 *   <restriction base="{http://www.witsml.org/schemas/1series}abstractUomEnum">
 *     <enumeration value="bblPft"/>
 *     <enumeration value="bblPin"/>
 *     <enumeration value="bblPmi"/>
 *     <enumeration value="dm3P100km"/>
 *     <enumeration value="dm3Pkm(100)"/>
 *     <enumeration value="dm3Pm"/>
 *     <enumeration value="ft3Pft"/>
 *     <enumeration value="galUKPmi"/>
 *     <enumeration value="galUSPft"/>
 *     <enumeration value="galUSPmi"/>
 *     <enumeration value="in3Pft"/>
 *     <enumeration value="LP100km"/>
 *     <enumeration value="LPkm(100)"/>
 *     <enumeration value="LPm"/>
 *     <enumeration value="m3Pkm"/>
 *     <enumeration value="m3Pm"/>
 *   </restriction>
 * </simpleType>
 * } </pre>
 * 
 */
@XmlType(name = "VolumePerLengthUom")
@XmlEnum
public enum VolumePerLengthUom {

    @XmlEnumValue("bblPft")
    BBL_PFT("bblPft"),
    @XmlEnumValue("bblPin")
    BBL_PIN("bblPin"),
    @XmlEnumValue("bblPmi")
    BBL_PMI("bblPmi"),
    @XmlEnumValue("dm3P100km")
    DM_3_P_100_KM("dm3P100km"),
    @XmlEnumValue("dm3Pkm(100)")
    DM_3_PKM_100("dm3Pkm(100)"),
    @XmlEnumValue("dm3Pm")
    DM_3_PM("dm3Pm"),
    @XmlEnumValue("ft3Pft")
    FT_3_PFT("ft3Pft"),
    @XmlEnumValue("galUKPmi")
    GAL_UK_PMI("galUKPmi"),
    @XmlEnumValue("galUSPft")
    GAL_US_PFT("galUSPft"),
    @XmlEnumValue("galUSPmi")
    GAL_US_PMI("galUSPmi"),
    @XmlEnumValue("in3Pft")
    IN_3_PFT("in3Pft"),
    @XmlEnumValue("LP100km")
    LP_100_KM("LP100km"),
    @XmlEnumValue("LPkm(100)")
    L_PKM_100("LPkm(100)"),
    @XmlEnumValue("LPm")
    L_PM("LPm"),
    @XmlEnumValue("m3Pkm")
    M_3_PKM("m3Pkm"),
    @XmlEnumValue("m3Pm")
    M_3_PM("m3Pm");
    private final String value;

    VolumePerLengthUom(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VolumePerLengthUom fromValue(String v) {
        for (VolumePerLengthUom c: VolumePerLengthUom.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
