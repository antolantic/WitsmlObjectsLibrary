//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.06.26 at 03:00:38 PM CDT 
//


package com.hashmapinc.tempus.WitsmlObjects.v1411;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for WellTestType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre> {@code
 * <simpleType name="WellTestType">
 *   <restriction base="{http://www.witsml.org/schemas/1series}abstractTypeEnum">
 *     <enumeration value="drill stem test"/>
 *     <enumeration value="production test"/>
 *     <enumeration value="unknown"/>
 *   </restriction>
 * </simpleType>
 * } </pre>
 * 
 */
@XmlType(name = "WellTestType")
@XmlEnum
public enum WellTestType {


    /**
     * A test to determine the productive capacity, pressure, 
     * 					permeability or extent (or a combination of these) of a hydrocarbon reservoir, 
     * 					with the drillstring still in the hole.
     * 
     */
    @XmlEnumValue("drill stem test")
    DRILL_STEM_TEST("drill stem test"),

    /**
     * A test to determine the daily rate of oil, gas, and water 
     * 					production from a (potential) reservoir.
     * 
     */
    @XmlEnumValue("production test")
    PRODUCTION_TEST("production test"),

    /**
     * The value is not known. This value should not be used
     * 					in normal situations. All reasonable attempts should be made to determine
     * 					the appropriate value. Use of this value may result in rejection in some situations.
     * 
     */
    @XmlEnumValue("unknown")
    UNKNOWN("unknown");
    private final String value;

    WellTestType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static WellTestType fromValue(String v) {
        for (WellTestType c: WellTestType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
