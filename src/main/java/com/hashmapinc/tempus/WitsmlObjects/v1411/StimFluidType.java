//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.06.26 at 03:00:38 PM CDT 
//


package com.hashmapinc.tempus.WitsmlObjects.v1411;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for StimFluidType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre> {@code
 * <simpleType name="StimFluidType">
 *   <restriction base="{http://www.witsml.org/schemas/1series}abstractTypeEnum">
 *     <enumeration value="acid-based"/>
 *     <enumeration value="gas"/>
 *     <enumeration value="oil-based"/>
 *     <enumeration value="water-based"/>
 *   </restriction>
 * </simpleType>
 * } </pre>
 * 
 */
@XmlType(name = "StimFluidType")
@XmlEnum
public enum StimFluidType {


    /**
     * A fluid in which the primary fluid medium of 
     * 					mixing and transport is acidic (substance which reacts with a base; 
     * 					aqueous acids have a pH less than 7).
     * 					
     * 
     */
    @XmlEnumValue("acid-based")
    ACID_BASED("acid-based"),

    /**
     * A carrier medium in which gas is the primary medium 
     * 					of mixing and transport.
     * 					
     * 
     */
    @XmlEnumValue("gas")
    GAS("gas"),

    /**
     * A fluid in which oil is the primary fluid medium 
     * 					of mixing and transport.
     * 					
     * 
     */
    @XmlEnumValue("oil-based")
    OIL_BASED("oil-based"),
    @XmlEnumValue("water-based")
    WATER_BASED("water-based");
    private final String value;

    StimFluidType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static StimFluidType fromValue(String v) {
        for (StimFluidType c: StimFluidType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
